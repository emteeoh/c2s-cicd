# .github/workflows/deploy-functional-tests.yml
name: Deploy and Functional Test

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          ssh-keygen -t rsa -b 2048 -N "" -f ~/.ssh/ephemeral_rsa
          echo "::set-output name=private_key::$(cat ~/.ssh/ephemeral_rsa)"
          echo "::set-output name=public_key::$(cat ~/.ssh/ephemeral_rsa.pub)"
        id: generate_key

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Ensure this matches your Terraform region

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Download version file
        uses: actions/download-artifact@v4
        with:
          name: version-file

      - name: Terraform Init
        run: terraform -chdir=terraform init

      - name: Terraform Apply
        id: tf_apply
        run: |
          terraform -chdir=terraform apply -auto-approve -var "ephemeral_public_key=${{ steps.generate_key.outputs.public_key }}"
          IP=$(terraform -chdir=terraform output -json | jq -r .public_ip.value)
          echo "IP is $IP"
          echo "public_ip=$IP" >> $GITHUB_OUTPUT

      - name: Install Ansible
        run: |
          python3 -m pip install --upgrade pip
          pip install ansible

      - name: Configure ansible.cfg
        run: |
          echo "[ssh_connection]" >> ansible.cfg
          echo "ssh_args = -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" >> ansible.cfg

      - name: Run Ansible Functional Tests
        run: ansible-playbook -u ubuntu -i "${{ steps.tf_apply.outputs.public_ip }}," --private-key ~/.ssh/ephemeral_rsa ansible/ubuntu_podman.yml

      - name: Terraform Destroy
        if: always()
        run: terraform -chdir=terraform destroy -auto-approve -var "ephemeral_public_key=${{ steps.generate_key.outputs.public_key }}"

